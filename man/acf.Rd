% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/acf.R
\name{acf}
\alias{acf}
\title{acf}
\usage{
acf(
  x,
  lag.max = NULL,
  type = c("correlation", "covariance", "partial"),
  plot = TRUE,
  na.action = na.fail,
  demean = TRUE,
  penalized = TRUE,
  lh = NULL,
  estimate = "direct",
  ...
)
}
\arguments{
\item{x}{a univariate or multivariate numeric time series.}

\item{lag.max}{maximum lag at which to calculate the penalized/sample ACF/PACF. Defaults to the smaller of \eqn{N-1} and \eqn{10log_{10}(N/nser)} where N is the number of non-missing observations and nser is the number of series.}

\item{type}{type of acf to be computed. Allow values are "correlation" (the default) or "partial".}

\item{plot}{'logical'. If 'TRUE' (the default) the penalized/sample ACF/PACF is plotted.}

\item{na.action}{function to be called to handle missing values. 'na.pass' can be used.}

\item{demean}{'logical'. Should a mean be estimated during estimating.}

\item{penalized}{'logical'. If 'TRUE' (the default) the penalized ACF/PACF is computed; if 'FALSE' the sample ACF/PACF is computed.}

\item{lh}{sequence of threshold values across h. Could be a single value (repeated for all h), a single vector of length h (repeated for all nser), or a h x nser matrix. Default is data driven.}

\item{estimate}{character vector of the estimation method for the ACF, options are "direct" (default) or "invertpacf".  "invertpacf" is preferred when the data can be approximated by a low order (<3) ARMA model.}

\item{...}{additional arguments for specific methods.}
}
\value{
An object of penalized/sample ACF/PACF estimation with the following elements:
\describe{
\item{\code{acf}}{A max.lag x nseries x nseries array containing the estimated penalized acf/pacf.}
\item{\code{type}}{Character vector returning the type argument requested.}
\item{\code{n.used}}{Numeric of the number of points used for estimation after na.action has been applied.}
\item{\code{lag}}{A max.lag x nseries x nseries array containing the lags at which the acf/pacf is estimated.}
\item{\code{series}}{The name of the time series.}
\item{\code{snames}}{The series names for a multivariate time series.}
\item{\code{penalized}}{Logical indicating if the acf/pacf returned is penalized.}
}
}
\description{
The Penalized (Partial) Autocorrelation Function (ACF/PACF) Estimation
}
\examples{
\dontrun{
### AR(1)
set.seed(1234)
data <- arima.sim(n=100, model=list(ar=0.5))

# Examples for penalized ACF/PACF and sample ACF/PACF
acf(data) # penalized estimate
acf(data, penalized = FALSE) # usual stats::acf() implementation
acf(x,estimate="invertpacf") # estimate the acf by inverting the pacf
acf(data, type ="partial") # penalized partial correlation estimate
acf(data, type ="partial", penalized = FALSE) # usual stats::pacf() estimate

set.seed(1234)
x1 <- arima.sim(n=100, model=list(ar=0.5))
x2 <- arima.sim(n=100, model=list(ar=0.1))
x3 <- arima.sim(n=100, model=list(ar=0.9))
x <- cbind(x1, x2, x3)

acf(x) #penalized estimate
acf(x, penalized = FALSE) # usual stats::acf() implementation
acf(x,estimate="invertpacf") # estimate the acf by inverting the pacf
acf(x, type ="partial") # penalized partial correlation estimate
acf(x, type ="partial", penalized = FALSE) # usual stats::pacf() estimate


### MA(1)
set.seed(1234)
data <- arima.sim(n=100, model=list(ma=0.7))

# Examples for penalized ACF/PACF and sample ACF/PACF
acf(data) # penalized estimate
acf(data, penalized = FALSE) # usual stats::acf() implementation
acf(x,estimate="invertpacf") # estimate the acf by inverting the pacf
acf(data, type ="partial") # penalized partial correlation estimate
acf(data, type ="partial", penalized = FALSE) # usual stats::pacf() estimate

set.seed(1234)
x1 <- arima.sim(n=100, model=list(ma=0.5))
x2 <- arima.sim(n=100, model=list(ma=0.1))
x3 <- arima.sim(n=100, model=list(ma=0.9))
x <- cbind(x1, x2, x3)

acf(x) #penalized estimate
acf(x, penalized = FALSE) # usual stats::acf() implementation
acf(x,estimate="invertpacf") # estimate the acf by inverting the pacf
acf(x, type ="partial") # penalized partial correlation estimate
acf(x, type ="partial", penalized = FALSE) # usual stats::pacf() estimate
}
}
